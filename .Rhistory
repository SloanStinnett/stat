stock_articles
tokens <- stock_articles %>%
unnest(map(corpus, tidy)) %>%
unnest_tokens(word, text) %>%
select(company, datetimestamp, word, id, heading)
tokens
library(tm.plugin.webmining)
library(purrr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(stringr)
library(tidyr)
library(tidytext)
install.packages("ggthemes")
stock_articles <- data_frame(company = company,
symbol = symbol) %>%
mutate(corpus = map(symbol, download_articles))
tokens <- stock_articles %>%
unnest(map(corpus, tidy)) %>%
unnest_tokens(word, text) %>%
select(company, datetimestamp, word, id, heading)
tokens
article_tf_idf <- tokens %>%
count(company, word) %>%
filter(!str_detect(word, "\\d+")) %>%
bind_tf_idf(word, company, n) %>%
arrange(-tf_idf)
article_tf_idf
plot_article <- article_tf_idf %>%
arrange(desc(tf_idf)) %>%
mutate(word = factor(word, levels = rev(unique(word))))
plot_article %>%
top_n(10) %>%
ggplot(aes(word, tf_idf, fill = company)) +
geom_col() +
labs(x = NULL, y = "tf-idf") +
coord_flip() + theme_minimal() + ggtitle('Highest tf_idf Words for Each Company')
plot_article %>%
top_n(10) %>%
ggplot(aes(word, tf_idf, fill = company)) +
geom_col() +
labs(x = NULL, y = "tf-idf") +
coord_flip() + theme_minimal() + ggtitle('Highest tf_idf Words for Each Company')
install.packages("searchConsoleR")
install.packages("googleAuthR")
install.packages("googleAnalyticsR")
library(googleAuthR)
library(searchConsoleR)
library(googleAnalyticsR)
library(ggplot2)
ga_auth()
library(googleAuthR)
library(searchConsoleR)
library(googleAnalyticsR)
library(ggplot2)
ga_auth()
View(my_accounts)
library(googleAuthR)
library(searchConsoleR)
library(googleAnalyticsR)
library(ggplot2)
#Authorize Google Analytics R- this will open a webpage
#You must be logged into your Google Analytics account on your web browser
ga_auth()
#Authorize Google Analytics R- this will open a webpage
#You must be logged into your Google Analytics account on your web browser
ga_auth()
my_accounts <- google_analytics_account_list()
View(my_accounts)
my_accounts <- ga_account_list()
my_accounts <- ga_account_list()
#Authorize Google Analytics R- this will open a webpage
#You must be logged into your Google Analytics account on your web browser
ga_auth()
my_accounts <- ga_account_list()
## Authorize script with Google Developer Console.
## Add path to your Google Developer Console Service Account secret.json file
service_token <-gar_auth_service("/Users/lewang/Dropbox/02 teaching/big_data/01lectures/text_analysis/r_search_console_secret.json")
## data in search console is reliable for 3 days ago so set start date = today - 3
## this is a single day pull so set end = start
start <- Sys.Date() - 3
end <- start
## set website to your URL including http://
website <- "http://lewangecon.com"
## what to download, choose between data, query, page, device, country
download_dimensions <- c('date','query')
## what type of Google search, choose between 'web', 'video' or 'image'
type <- c('web')
searchquery <- search_analytics(siteURL = website,
startDate = start,
endDate = end,
dimensions = download_dimensions,
searchType = type,
rowLimit = 5000)
## set website to your URL including http://
website <- "http://www.lewangecon.com"
## what to download, choose between data, query, page, device, country
download_dimensions <- c('date','query')
## what type of Google search, choose between 'web', 'video' or 'image'
type <- c('web')
## other options available, check out ?search_analytics in the R console
## this is the query to the search console API
## rowLimit = 5000 is the max
searchquery <- search_analytics(siteURL = website,
startDate = start,
endDate = end,
dimensions = download_dimensions,
searchType = type,
rowLimit = 5000)
## set website to your URL including http://
website <- "http://www.lewangecon.com"
## what to download, choose between data, query, page, device, country
download_dimensions <- c('date','query')
## what type of Google search, choose between 'web', 'video' or 'image'
type <- c('web')
## other options available, check out ?search_analytics in the R console
## this is the query to the search console API
## rowLimit = 5000 is the max
searchquery <- search_analytics(siteURL = website,
startDate = start,
endDate = end,
dimensions = download_dimensions,
searchType = type,
rowLimit = 5000)
## set website to your URL including http://
website <- "http://lewangecon.com"
## what to download, choose between data, query, page, device, country
download_dimensions <- c('date','query')
## what type of Google search, choose between 'web', 'video' or 'image'
type <- c('web')
## other options available, check out ?search_analytics in the R console
## this is the query to the search console API
## rowLimit = 5000 is the max
searchquery <- search_analytics(siteURL = website,
startDate = start,
endDate = end,
dimensions = download_dimensions,
searchType = type,
rowLimit = 5000)
## set website to your URL including http://
website <- "http://lewangecon.com"
## what to download, choose between data, query, page, device, country
download_dimensions <- c('date','query')
## what type of Google search, choose between 'web', 'video' or 'image'
type <- c('web')
## other options available, check out ?search_analytics in the R console
## this is the query to the search console API
## rowLimit = 5000 is the max
searchquery <- search_analytics(siteURL = website,
startDate = start,
endDate = end,
dimensions = download_dimensions,
searchType = type,
rowLimit = 5000)
library(gtrendsR)
install.packages("gtrendsR")
install.packages("gtrendsR")
install.packages("reshape2")
library(gtrendsR)
library(reshape2)
google.trends <- gtrends(c("blu-ray"), gprop = "web", time = "all")[[1]]
google.trends <- dcast(google.trends, date ~ keyword + geo, value.var = "hits")
rownames(google.trends) <- google.trends$date
google.trends$date <- NULL
View(google.trends)
google.trends <- gtrends(c("skiing"), geo = c("CA", "NZ"), gprop = "web", time = "2010-06-30 2017-06-30")[[1]]
View(google.trends)
geo.codes = sort(unique(countries[substr(countries$sub_code, 1, 2) == "IT", ]$sub_code))
geo.codes
google.trends <- gtrends(c("blu-ray"), gprop = "web", time = "all")[[1]]
google.trends <- dcast(google.trends, date ~ keyword + geo, value.var = "hits")
rownames(google.trends) <- google.trends$date
google.trends$date <- NULL
View(google.trends)
plot(google.trends)
plot(google.trends)
plot(google.trends$`blu-ray_world`)
as.data.frame(google.trends)
plot(google.trends)
$`blu-ray_world`
plot(google.trends$blu-ray_world)
index(google.trends)
View(google.trends)
google.trends <- gtrends(c("blu-ray"), gprop = "web", time = "all")[[1]]
google.trends <- dcast(google.trends, date ~ keyword + geo, value.var = "hits")
rownames(google.trends) <- google.trends$date
#google.trends$date <- NULL
View(google.trends)
plot(blu-ray_world,date)
plot(`blu-ray_world`,date)
plot(google.trends)
plot(google.trends)
attach(google.trends)
plot(`blu-ray_world`~as.Date(date))
plot(`blu-ray_world`~as.Date(date), xaxt = "n", type = "l")
google.trends <- gtrends(c("sorrento therapeutics"), gprop = "web", time = "all")[[1]]
google.trends <- dcast(google.trends, date ~ keyword + geo, value.var = "hits")
rownames(google.trends) <- google.trends$date
#google.trends$date <- "SRNE"
View(google.trends)
google.trends$`sorrentotherapeutics_world` <- "SRNE"
View(google.trends)
colnames(google.trends)[2] <- "SRNE"
View(google.trends)
google.trends <- gtrends(c("sorrento therapeutics"), gprop = "web", time = "all")[[1]]
google.trends <- dcast(google.trends, date ~ keyword + geo, value.var = "hits")
rownames(google.trends) <- google.trends$date
colnames(google.trends)[2] <- "SRNE"
View(google.trends)
axis(1, as.Date(date), format(as.Date(date), "%b %d"), cex.axis = .7)
axis(1, as.Date(date), format(as.Date(date), "%m/%d/%Y"), cex.axis = .7)
plot(`SRNE`~as.Date(date), xaxt = "n", type = "l")
axis(1, as.Date(date), format(as.Date(date), "%m/%d/%Y"), cex.axis = .7)
dev.off()
plot(`SRNE`~as.Date(date), xaxt = "n", type = "l")
axis(1, as.Date(date), format(as.Date(date), "%m/%d/%Y"), cex.axis = .7)
google.trends <- gtrends(c("sorrento therapeutics"), gprop = "web", time = "all")[[1]]
google.trends <- dcast(google.trends, date ~ keyword + geo, value.var = "hits")
rownames(google.trends) <- google.trends$date
colnames(google.trends)[2] <- "SRNE"
View(google.trends)
attach(google.trends)
plot(`SRNE`~as.Date(date), xaxt = "n", type = "l")
axis(1, as.Date(date), format(as.Date(date), "%m/%d/%Y"), cex.axis = .7)
plot(`SRNE`~as.Date(date), xaxt = "n", type = "l")
res <- gtrends(c("nhl", "nba"), geo = c("CA", "US"))
plot(res)
View(res)
res <- gtrends(c("sorrento"))
plot(res)
google.trends<-gtrends(c("sorrento"),res="1h")
google.trends<-gtrends(c("sorrento"),res="7d")
trend <- gtrends(query = "iphone7",res = "7d", cat = "18", geo = "US")
trend <- gtrends("iphone7",res = "7d", cat = "18", geo = "US")
?gtrends
google.trends<-gtrends(c("sorrento"),time = "now 7-d")
plot(google.trends)
View(google.trends)
google.trends[[1]]
View(google.trends)
head(google.trends[[1]])
tail(google.trends[[1]])
plot(google.trends)
google.trends$header
# Donwload data
# key word, from web, past 7 days
# type ?gtrends for more information on options
google.trends<-gtrends(c("OU football"), gprop = "web", time = "now 7-d")
plot(google.trends)
# Let's look at the data
View(google.trends)
# Read "interet_over_time"
data<-google.trends[[1]]
# Let's go to Google website to compare the data
# https://trends.google.com/trends/
# There is a download button on Google trend website
# we can download the CSV file and compare it to ours
tail(data)
plot(google.trends)
goole.trends$`interest_over_time`
data<-google.trends[[2]]
tail(data)
?head
data<-google.trends[[2]]
head(data, n=20)
google.trends
google.trends
# Let's look at the data
View(google.trends)
data<-google.trends[[7]]
head(data, n=20)
?gtrends
# Default: How about Oklahoma only?
google.trends<-gtrends(c("OU football"),
geo = c("CA", "US"),
gprop = "web",
time = "now 7-d")
plot(google.trends)
# Default: How about Oklahoma only?
google.trends<-gtrends(c("OU football"),
geo = c("US"),
gprop = "web",
time = "now 7-d")
plot(google.trends)
VIEW(google.trends)
View(google.trends)
View(google.trends)
data<-google.trends[[3]]
head(data)
?dcast
data$keyword
# Donwload data
# Default: world wide searches
# key word, from web, past 7 days
# type ?gtrends for more information on options
google.trends<-gtrends(c("OU football"), gprop = "web", time = "now 7-d")
plot(google.trends)
# Let's look at the data and what it consists of
View(google.trends)
# Read "interet_over_time"
data<-google.trends[[1]]
# There is a download button on Google trend website
# we can download the CSV file and compare it to ours
tail(data)
data<-google.trends[[2]]
head(data, n=20)
# Default: Let's look at US and Canada only
google.trends<-gtrends(c("OU football"),
geo = c("CA", "US"),
gprop = "web",
time = "now 7-d")
plot(google.trends)
# Default: Among all the Americans, who is looking?!
google.trends<-gtrends(c("OU football"),
geo = c("US"),
gprop = "web",
time = "now 7-d")
View(google.trends)
data<-google.trends[[3]]
head(data)
google.trends<-gtrends(c("gay porn"),
geo = c("US"),
gprop = "web",
time = "now 7-d")
View(google.trends)
data<-google.trends[[3]]
head(data)
?dcast
install.packages("tinytext")
69.7 + 48.7 + 84.2 + 56.0 +  71.4 + 74.1 +  68.2 +  84.4 + 74.2 + 70.6 + 45.0 + 68.0 + 63.4
# We can also subset a particular time period
data <- gtrends(c("OU Football"),  time = ""2010-06-30 2017-06-30"")[[1]]
library(gtrendsR)
library(reshape2)
# We can also subset a particular time period
data <- gtrends(c("OU Football"),  time = ""2010-06-30 2017-06-30"")[[1]]
# We can also subset a particular time period
data <- gtrends(c("OU Football"),  time = "2010-06-30 2017-06-30)[[1]]
google.trends<-gtrends(c("gay porn"),
geo = c("US"),
gprop = "web",
time = "2010-06-30 2017-06-30")
google.trends<-gtrends(c("gay porn"),
geo = c("US"),
gprop = "web",
time = "2010-06-30 2017-06-30")
data<-google.trends[[3]]
head(data)
head(data, n= 20)
# We can also set multiple searchers
google.trends<-gtrends(c("gay porn", "homosexsuals"),
geo = c("US"),
gprop = "web",
time = "2010-06-30 2017-06-30")
data<-google.trends[[3]]
head(data, n= 10)
View(data)
google.trends<-gtrends(c("gay porn", "marriages"),
geo = c("US"),
gprop = "web",
time = "2010-06-30 2017-06-30")
data<-google.trends[[3]]
View(data)
install.packages("gutenbergr")
library(gutenbergr)
hgwells <- gutenberg_download(c(35,36,5230,159))
View(hgwells)
?unnest_tokens
library(tidyverse)
?unnest_tokens
library(dplyr)
?unnest_tokens
?unnest_tokens
library(tidytext)
?unnest_tokens
summary(hgwells)
unnest_tokens(hgwells,word,text)
?anti_join
hgwells.token <- unnest_tokens(hgwells,word,text)
anti_join(hgwells.token,stop_words)
stop_words
hgwell.tidy <- anti_join(hgwells.token,stop_words)
hgwell.tidy
hgwells.token
tidy_hgwells
tidy_hgwells <- hgwells %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
table(tidy_hgwells)
table(tidy_hgwells[2])
tidy_hgwells
tidy_hgwells$word
table(tidy_hgwells$word)
# Let's analyze the frequency
prop.table(table(tidy_hgwells$word))
# Let's analyze the frequency
pmf.hgwells <- prop.table(table(tidy_hgwells$word))
?sort
# Let's analyze the frequency
pmf.hgwells <- sort(prop.table(table(tidy_hgwells$word)))
head(pmf.hgwells)
pmf.hgwells <- prop.table(table(tidy_hgwells$word))
pmf.hgwells
head(pmf.hgwells)
tidy_hgwells
pmf.hgwells <- as.data.frame(prop.table(table(tidy_hgwells$word)))
pmf.hgwells
names(pmf.hgwells$Var1)<- "word"
head(pmf.hgwells)
names(pmf.hgwells) <- c("word", "freq")
head(pmf.hgwells)
pmf.hgwells[order(pmf.hgwells$freq)]
pmf.hgwells[order(pmf.hgwells$freq),]
head(pmf.hgwells[order(pmf.hgwells$freq),])
head(pmf.hgwells[order(-pmf.hgwells$freq),])
# Let's analyze the frequency
# Obtain the marginal distribution
pmf.bronte <- as.data.frame(prop.table(table(tidy_bronte$word)))
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 767))
tidy_bronte <- bronte %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
# Let's analyze the frequency
# Obtain the marginal distribution
pmf.bronte <- as.data.frame(prop.table(table(tidy_bronte$word)))
# rename the variables in the data
names(pmf.bronte) <- c("word", "freq")
# Sort by descending
head(pmf.bronte[order(-pmf.bronte$freq),])
# Sort by descending
head(pmf.hgwells[order(-pmf.hgwells$freq),], n=10)
# Sort by descending
head(pmf.bronte[order(-pmf.bronte$freq),],n=10)
pmf.hgwells.short <- pmf.hgwells[pmf.hgwells$freq>=0.0001]
ggplot(data=pmf.hgwells.short, mapping = aes(x=word,y=freq))+
geom_col() +
xlab(NULL) +
coord_flip()
library(ggplot2)
pmf.hgwells.short <- pmf.hgwells[pmf.hgwells$freq>=0.0001,]
ggplot(data=pmf.hgwells.short, mapping = aes(x=word,y=freq))+
geom_col() +
xlab(NULL) +
coord_flip()
ggplot(data=pmf.hgwells.short, mapping = aes(x=word,y=freq))
geom_col() +
xlab(NULL) +
coord_flip()
geom_col() +
xlab(NULL) +
coord_flip()
ggplot(pmf.hgwells[pmf.hgwells$freq>=0.002,]) +
geom_bar(mapping = aes(x=word,y=freq)) +
theme_bw()
ggplot(pmf.hgwells[pmf.hgwells$freq>=0.002,], mapping = aes(x=word,y=freq)) +
geom_bar(stat="identity") +
coord_flip()
pmf.hgwells.sort <- pmf.hgwells[order(-pmf.hgwells$freq),]
ggplot(pmf.hgwells[pmf.hgwells.sort$freq>=0.002,], mapping = aes(x=word,y=freq)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(pmf.hgwells.sort[pmf.hgwells.sort$freq>=0.002,], mapping = aes(x=word,y=freq)) +
geom_bar(stat="identity") +
coord_flip()
View(pmf.hgwells.short)
pmf.hgwells.sort <- pmf.hgwells[order(-pmf.hgwells$freq),]
head(pmf.hgwells.sort)
ggplot(pmf.hgwells.sort[pmf.hgwells.sort$freq>=0.002,], mapping = aes(x=word,y=freq)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(pmf.hgwells.sort[pmf.hgwells.sort$freq>=0.002,], mapping = aes(x=reorder(word,-freq),y=freq)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(pmf.hgwells.sort[pmf.hgwells.sort$freq>=0.002,], mapping = aes(x=reorder(word,freq),y=freq)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(pmf.hgwells[pmf.hgwells$freq>=0.002,], mapping = aes(x=reorder(word,freq),y=freq)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(pmf.hgwells[pmf.hgwells$freq>=0.002,], mapping = aes(x=word,y=freq)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(pmf.bronte[pmf.bronte$freq>=0.002,], mapping = aes(x=reorder(word,freq),y=freq)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(pmf.hgwells[pmf.hgwells$freq>=0.002,], mapping = aes(x=word,y=freq)) +
geom_bar(stat="identity") + # the heights of the bars to represent values in the data, use stat="identity"
coord_flip() # Horizontal bar plot
# Another way to visualize this? Word cloud!
library(wordcloud)
install.packages()
install.packages("wordcloud")
library(wordcloud)
wordcloud(pmf.hgwells$word, pmf.hgwells$freq)
short<-pmf.hgwells[pmf.hgwells$freq>=0.002,]
wordcloud(short$word, short$freq)
short<-pmf.hgwells[pmf.hgwells$freq>=0.001,]
wordcloud(short$word, short$freq)
wordcloud(short$word, short$freq, min.freq = 0.002)
install.packages("blogdown")
install.packages("bookdown")
library(blogdown)
blogdown::install_hugo()
install.packages("blogdown")
blogdown::install_hugo()
blogdown::update_hugo()
?bookdown
library("bookdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
blogdown::new_site(theme = 'ribice/kiss')
install.packages("blogdown")
setwd("/Users/lewang/Dropbox/02\ teaching/stat/08github/stat")
